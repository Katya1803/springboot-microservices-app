# api-gateway/src/main/resources/application.yml
server:
  port: 8080

spring:
  application:
    name: api-gateway

  # Redis for rate limiting and blacklist
  data:
    redis:
      host: localhost
      port: 6379
      database: 0
      timeout: 2000ms

  # Cloud Gateway Configuration
  cloud:
    gateway:
      # Global CORS configuration
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins: "*"
            allowed-methods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowed-headers: "*"
            allow-credentials: false
            max-age: 3600

      # Route definitions
      routes:
        # ==========================================
        # AUTH SERVICE ROUTES (No authentication)
        # ==========================================
        - id: auth-service-login
          uri: lb://auth-service
          predicates:
            - Path=/auth/login
            - Method=POST
          filters:
            - name: RateLimit
              args:
                limit: 5
                duration: 900  # 15 minutes

        - id: auth-service-refresh
          uri: lb://auth-service
          predicates:
            - Path=/auth/refresh
            - Method=POST
          filters:
            - name: RateLimit
              args:
                limit: 10
                duration: 60  # 1 minute

        - id: auth-service-logout
          uri: lb://auth-service
          predicates:
            - Path=/auth/logout
            - Method=POST
          filters:
            - AuthenticationFilter

        - id: auth-service-health
          uri: lb://auth-service
          predicates:
            - Path=/auth/health
            - Method=GET

        # ==========================================
        # USER SERVICE ROUTES (Require authentication)
        # ==========================================
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
          filters:
            - AuthenticationFilter
            - name: RateLimit
              args:
                limit: 60
                duration: 60  # 60 requests per minute

        # ==========================================
        # TEST SERVICE ROUTES (Require authentication)
        # ==========================================
        - id: test-service-protected
          uri: lb://test-service
          predicates:
            - Path=/api/test/**
          filters:
            - AuthenticationFilter
            - name: RateLimit
              args:
                limit: 60
                duration: 60

        - id: test-service-public
          uri: lb://test-service
          predicates:
            - Path=/test/public
            - Method=GET

      # Default filters for all routes
      default-filters:
        - name: RequestId
        - name: Retry
          args:
            retries: 3
            statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
            methods: GET
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
              factor: 2

# Eureka Client
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 30
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.value}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:microservices-security-jwt-secret-key-must-be-at-least-256-bits-long-for-hs256}
  issuer: auth-service

# Logging
logging:
  level:
    root: INFO
    com.example.gateway: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.server.adapter: TRACE

# Management
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true